@using XSD2HTML
<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
 
</head>
<body>
    <table class="wrapped confluenceTable">
        <colgroup><col><col><col></colgroup>
        <tbody>
            <tr>
                <th class="confluenceTh">Property</th>
                <th class="confluenceTh">Type</th>
                <th class="confluenceTh">Description</th>
            </tr>
            @ListNodes(Model)

            <tr>
                <td class="highlight-yellow confluenceTd" colspan="3" data-highlight-colour="yellow">
                    <span style="color: rgb(21, 125, 11);">⚑ Mandatory </span><span style="color: rgb(149, 10, 95);">⚑ Optional </span><span style="color: rgb(11, 32, 111);">⚑ Repeating </span>
                     Generated by <a href="https://github.com/mbarqawi/XSD2HTML">XSD2HTML</a>
                </td>
            </tr>
        </tbody>
    </table>
</body>
</html>

@helper ListNodes(SchemaNode Tag)
{
<tr>

    <td>

        @Raw("<sup>" + Tag.Numbering + "</sup>" + " " + Tag.XmlTag)
    </td>

    @{
        string cardinalityLegend = "";
        if (Tag.Cardinality == Cardinality.Optional)
        {
            cardinalityLegend = "<span style='color: rgb(149, 10, 95) '>  O </span>";
        }
        else if (Tag.Cardinality == Cardinality.Required)
        {
            cardinalityLegend = "<span style='color: rgb(21, 125, 11); '>  M </span>";
        }
        else if (Tag.Cardinality == Cardinality.Repeating)
        {
            if(Tag.MaxOccurs == 1 &&Tag.MinOccurs==0 )
            {
       cardinalityLegend = "<span style='color: rgb(149, 10, 95) '>  O </span>";
            }else 
            {
            string maxOcc = (Tag.MaxOccurs == -1) ? "n" : Tag.MaxOccurs.ToString();
            cardinalityLegend = "<span style='color: rgb(11, 32, 111); '> Rep. [" + Tag.MinOccurs + ".." + maxOcc + "] </span>";
            }
        }
    }
    @if (Tag is ComplexNode)
    {

        if (Tag.XSDType == "Choice")

        {
            <td class='highlight-blue confluenceTd'>
                @Raw("<span >Choice " + cardinalityLegend + " </span></text>")
            </td>
        }
        else
        {
            <td>
                @Raw("<span>Record " + cardinalityLegend + " </span></text>")
            </td>
        }

    }
    else if (Tag is SimpleNode)
    {
        <td>
            @if (Tag is EnumNode)
            {
            @Raw("<span> Enum" + cardinalityLegend + " </span></text>")

            }
            else
            {
            @Raw("<span>" + ((SimpleNode)Tag).ElementType + cardinalityLegend + " </span></text>")
            }

        </td>

    }

    <td>
        @if (Tag is EnumNode)
        {
            <ul>

                @foreach (string VARIABLE in ((EnumNode)Tag).EnumValues)
                {

                    <li>@VARIABLE</li>
                }

            </ul>
        }
    </td>
</tr>
    if (Tag is ComplexNode)
    {
        var lComplexNode = (ComplexNode)Tag;
        if (lComplexNode.mChildList != null)
        {
            foreach (SchemaNode item in lComplexNode.mChildList)
            {
                @ListNodes(item)
            }

        }
    }
}
